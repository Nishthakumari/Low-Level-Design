<!-- If class B is a sutype of Class A, then we should be able to replace oject of A with B without breaking the behavior of the program.

Subclass should extend the behaviour of parent class, not narrow it down.
 -->


 package com.example.ll2;

public interface Bike {
    void turnOnEngine();
    void accelerate();

}

class Motorcycle implements Bike{

    boolean isEngineOn;
    int speed;

    public void turnOnEngine() {
        //turn on Engine
        isEngineOn = true;
    }

    public void accelerate() {
        //increase the speed
        speed = speed +10;
    }
}

class Bicycle implements Bike{

    public void turnOnEngine() {
        throw new AssertionError("there is no engine");
    }

    public void accelerate() {
        //do something
    }
}


Here, in Bicycle object, we are throwing error in turnOnEngine funtion.
Bicycle class is narrowing down the function of bike class. If we will replace the bike object with motorcyle object, our code will break.


